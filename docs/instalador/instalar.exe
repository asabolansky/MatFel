
/barnyarif [ $# -ne 3 ]
then
echo "FALLO  Utiliza: $(basename $0) directorio_donde_lo_queremos_instalar usuario_de_la_base password_de_la_base"
exit 1
fi

PATH=$1
USER=$2
PASSWD=$3
BASE=tesis
#Instalar dependencias

aptitude update
aptitude -y install libglib2.0-0 libgpgme11 libopenvas3 libpcap0.8 mysql-server subversion bzip2 nmap nikto w3af smbclient
aptitude -y install sqlite3 libdbd-sqlite3-perl libcatalyst-perl \
    libcatalyst-modules-perl libdbix-class-timestamp-perl \
    libdatetime-format-sqlite-perl libconfig-general-perl \
    libhtml-formfu-model-dbic-perl libterm-readline-perl-perl \
    libdbix-class-encodedcolumn-perl libperl6-junction-perl \
    libtest-pod-perl libgeo-ip-perl libxml-rsslite-perl libgdchart-gd2-noxpm
aptitude clean

#Instalar lo que no esta en paquete de debian
cpan -i Catalyst::Plugin::Unicode::Encoding
cpan -i Chart::OFC2 

#Bajar el arbol
mkdir $PATH
svn co svn+ssh://root@163.10.10.29/capturas/tesis/desarrollo/ $PATH
mysql -u $USER -p $PASSWD < $PATH/sql/tesis.sql
#Crear la base de datos
for i in `130 289`; do
          if [ -e $PATH/sql/sql.rev$i ]; then
                echo "Aplicando sql.rev$i";
                mysql --default-character-set=utf8 $BASE -u$USER -p$PASSWD < $PATH/sql/sql.rev$i;
          fi;
done;

mkdir /var/log/tesis
#echo '#!/bin/sh' >/usr/bin/tesis
#echo "perl $PATH/script/tesis_server.pl  -d -r  > /dev/null 2>/var/log/tesis/tesis.log &" >>/usr/bin/tesis
#chmod +x /usr/bin/tesis

#Instalar OpenVas
wget http://download.opensuse.org/repositories/security:/OpenVAS:/STABLE:/v3/Debian_5.0/i386/libopenvas3_3.1.3-1_i386.deb
wget http://download.opensuse.org/repositories/security:/OpenVAS:/STABLE:/v3/Debian_5.0/i386/openvas-client_3.0.1-1_i386.deb
wget http://download.opensuse.org/repositories/security:/OpenVAS:/STABLE:/v3/Debian_5.0/i386/openvas-scanner_3.1.0-1_i386.deb
dpkg -i libopenvas3_3.1.3-1_i386.deb
dpkg -i openvas-client_3.0.1-1_i386.deb
dpkg -i openvas-scanner_3.1.0-1_i386.deb

#Crear certificado del servidor
openvas-mkcert

#Agregar un usuario
openvas-adduser

#Bajar los plugins
openvas-nvt-sync

#Wapiti - Web application vulnerability scanner / security auditor --> 2
cd $tesis/script
wget http://ufpr.dl.sourceforge.net/project/wapiti/wapiti/wapiti-2.2.1/wapiti-2.2.1.tar.bz2
tar xjvf wapiti-2.2.1.tar.bz2

#Crear un script /usr/bin/wapiti
echo '#!/bin/sh' > /usr/bin/wapiti
echo "cd $PATH/script/wapiti-2.2.1/src/' >> /usr/bin/wapiti
echo 'python wapiti.py $*' >> /usr/bin/wapiti
chmod +x /usr/bin/wapiti
#Nikto - a web server scanning and testing tool
nikto -update

#Instalar Snort y Barnyard2
apt-get install snort libmysqlclient-dev build-essential libpcap0.8-dev 
cd /usr/src/
wget http://www.securixlive.com/download/barnyard2/barnyard2-1.8.tar.gz
tar xzvf barnyard2-1.8.tar.gz
cd barnyard2-1.8/
./configure --with-mysql-libraries=/usr/lib/
make
make install
#Luego configurar y ejecutar barnyard2:
cp $PATH/docs/instalador/aux/snort.conf /etc/snort/
cp $PATH/docs/instalador/aux/barnyard2.conf /etc/
mkdir /var/log/barnyard2
#echo '#!/bin/sh' > /usr/bin/barnyard2
#echo "barnyard2 -c /etc/barnyard2.conf -d /var/log/snort -f snortunifed2.log -w /var/log/snort/snort.waldo > /dev/null 2>/var/log/tesis/tesis.log &">> /usr/bin/barnyard2
#chmod +x /usr/bin/barnyard2

#Configurar FW
#IPv6
cp $PATH/docs/instalador/aux/ip6tables /etc/network/if-up.d/
chmod +x /etc/network/if-up.d/ip6tables
#IPv4
cp $PATH/docs/instalador/aux/iptables /etc/network/if-up.d/
chmod +x /etc/network/if-up.d/iptables

#Poner el script para que arranque automaticamente
cp $PATH/docs/instalador/aux/barnyard2 /etc/init.d/
cp $PATH/docs/instalador/aux/tesisWeb /etc/init.d/
chmod +x /etc/init.d/tesisWeb
chmod +x /etc/init.d/barnyard2
chmod +x $PATH/script/tesis_server.pl
update-rc.d tesisWeb defaults
update-rc.d barnyard2 defaults
