.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "UPDATE-NESSUSRC 1"
.TH UPDATE-NESSUSRC 1 "2013-03-19" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
update\-nessusrc \- Updates Nessus configuration file with new plugins.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  # updates nessusrc using default settings (eg, non\-dangerous plugins
\&  #   and ping / tcp_connect scanners in the script as distributed).
\&  update\-nessusrc ~/.nessusrc
\&
\&  # same as above but also print a summary of the changes.
\&  update\-nessusrc \-s ~/.nessusrc
\&
\&  # produces an alternate nessusrc without replacing original and
\&  #   also prints lots of debugging info.
\&  update\-nessusrc \-d ~/.nessusrc
\&
\&  # updates a special nessusrc to use tcp_connect scanner (plugin #10335) 
\&  #   and test just for MS RPC interface buffer overruns (plugin #11835).
\&  update\-nessusrc \-c "" \-f "" \-r "" \-i "10335,11835" .nessusrc\-ms03\-039
\&
\&  # updates a special nessusrc w/ destructive plugins and tcp_connect
\&  #   scanner.
\&  update\-nessusrc \-c "denial,destructive_attack,flood,kill_host" \-i 10335 ~/.nessusrc\-destructive
\&
\&  # updates a special nessusrc w/ plugins associated with SMTP servers in
\&  #   all categories.
\&  update\-nessusrc \-c "_all_" \-f "SMTP problems" ~/.nessusrc\-smtp
\&
\&  # updates a special nessusrc w/ plugins associated with SMTP servers in
\&  #   all categories except destructive_attack.
\&  update\-nessusrc \-c "_all_" \-c !destructive_attack \-f "SMTP problems" ~/.nessusrc\-smtp
\&
\&  # updates a special nessusrc w/ plugins that scan only for critical\-
\&  #   and high\-risk vulnerabilities.
\&  update\-nessusrc \-r "(Critical|High)" ~/.nessusrc\-risky
\&
\&  # updates a special nessusrc to scan for SANS Top 20 Vulnerabilities.
\&  update\-nessusrc \-t ~/.nessusrc\-top20
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script queries a Nessus server for its list of available plugins
and updates a Nessus client configuration file specified on the
commandline.  Specifically, it completely updates the sections
\&\f(CW\*(C`SCANNER_SET\*(C'\fR and \f(CW\*(C`PLUGIN_SET\*(C'\fR whenever it is run.  Use it
periodically (eg, via cron) to keep abreast of additions (and deletions)
in the set of plugins available through that server.
.PP
Much of the script's behaviour is controlled by variables set either in
the script itself or in a separate script configuration file, specified
by \f(CW$script_config\fR.  If it exists, the script configuration file is
treated as Perl code and evaluated in a \fIsandbox\fR, which supports only
variable definitions.  Use of a separate script configuration file makes
it possible for several people to share \fBupdate-nessusrc\fR on the same
system and promises to make upgrading the script much easier.
.PP
The decision about which plugins to enable can be controlled either by
one or more configurable variables or by commandline arguments.
.PP
.Vb 7
\&    Variable            Commandline         Purpose
\&    @plugin_cats        \-c|\-\-categories     Enables plugin categories.
\&    @plugin_fams        \-f|\-\-families       Enables plugin families.
\&    @plugin_excludes    \-x|\-\-excludes       Excludes plugin ids explicitly.
\&    @plugin_includes    \-i|\-\-includes       Includes plugin ids explicitly.
\&    @plugin_risks       \-r|\-\-risks          Enables plugin based on risk factors.
\&    n/a                 \-t|\-\-top20          Enables plugins for SANS Top 20.
.Ve
.PP
Plugins explicitly excluded will never be used regardless of the other
variables or commandline options.  Also, commandline arguments take
precedence over variables defined in the script or a separate
configuration file; thus, for example, you can disable all plugin
categories by using the commandline argument \f(CW\*(C`\-c ""\*(C'\fR.
.PP
Other settings include:
.PP
.Vb 5
\&    Variable            Commandline         Purpose
\&    $DEBUG              \-d|\-\-debug          Turn on debugging.  NB: leaves
\&                                                rc file unchanged.
\&    $summary            \-s|\-\-summary        Print a summary report of 
\&                                                changes made in plugins.
.Ve
.PP
\&\fBupdate-nessusrc\fR is written in Perl and calls the Nessus client to
obtain a list of current plugins (using the option \*(L"\-qp\*(R").  It should
work on any unix-like system with Perl 5.003 or later and Nessus 1.1.13
or later.  It also requires the following Perl modules:
.PP
.Vb 6
\&    o Carp
\&    o Getopt::Long
\&    o IPC::Open2
\&    o LWP::UserAgent
\&    o LWP::Debug
\&    o Safe
.Ve
.PP
If your system does not have these modules installed already, visit \s-1CPAN\s0
(<http://search.cpan.org/>).  Note that \f(CW\*(C`Safe\*(C'\fR must be at least
version 2.0, which does not work with versions of Perl older than 5.003. 
Note also that \f(CW\*(C`LWP::Debug\*(C'\fR and \f(CW\*(C`LWP::UserAgent\*(C'\fR are not included with
the default Perl distribution so you may need to install them yourself;
they're included as part of the \f(CW\*(C`LWP library\*(C'\fR
(<http://search.cpan.org/dist/libwww\-perl/>).
.SH "KNOWN BUGS AND CAVEATS"
.IX Header "KNOWN BUGS AND CAVEATS"
Currently, I am not aware of any bugs in this script.
.PP
As of August 2005, \s-1SANS\s0 appears to be adjusting their content based on
the \fIbrowser's\fR user agent and, in the case of my script, it redirects
to a non-existent page.  A work-around is to change the user-agent
string, \f(CW$useragent\fR, to something more common; eg,
.PP
.Vb 1
\&  Mozilla/5.0 (Windows; U; Windows NT 5.1; en\-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6
.Ve
.PP
You can make the change either in the script itself or in the file
\&\f(CW\*(C`~/.update\-nessusrc\*(C'\fR.
.PP
This script is not a substitute for the Nessus client in terms of
managing a configuration file.  On one hand, it requires that a
configuration file already exists.  On the other, several plugins
require additional configuration \- simply adding them to the list of
plugins used may not be optimal.
.PP
There is a limit to the size of the arguments passed to
\&\f(CW\*(C`script_cve_id()\*(C'\fR, which sets the \s-1CVE\s0 IDs of the flaws tested by each
plugin.  Additional \s-1CVE\s0 IDs, which by convention are listed in comments,
are not handled by this script since they can not be reliably
identified.  Thus, you would do well to review the report of Top 20
Vulnerabilities for which no plugins were found and update the
configuration file manually after examining plugins available on your
server.  Otherwise, you risk generating a configuration file that's not
quite comprehensive.
.PP
To ensure an accurate scan for the \s-1SANS\s0 Top 20 Vulnerabilities, you must
make sure \f(CW\*(C`auto_enable_dependencies\*(C'\fR is set to \f(CW\*(C`yes\*(C'\fR in the
configuration file; \fBupdate-nessusrc\fR will \fBnot\fR do this for you.
.PP
Finally, realize that this script along with its script configuration
files may hold userids and passwords used to connect to a Nessus server;
protect them accordingly!
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
Fatal errors will be reported using croak; these include the inability
to run the Nessus client and failures to read / write the configuration
files.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInessus\-update\-plugins\fR\|(5), <http://www.nessus.org/plugins/>,
<http://www.tifaware.com/perl/update\-nessusrc/>.
