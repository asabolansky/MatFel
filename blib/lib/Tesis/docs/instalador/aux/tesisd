#!/bin/sh
# ----------------------------------------------------------------------
#    Copyright (c) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007
#     NOVELL (All rights reserved)
#    Copyright (c) 2008, 2009 Canonical, Ltd.
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of version 2 of the GNU General Public
#    License published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, contact Novell, Inc.
# ----------------------------------------------------------------------
# Authors:
#  Steve Beattie <steve.beattie@canonical.com>
#  Kees Cook <kees@ubuntu.com>
#
# /etc/init.d/apparmor
#
### BEGIN INIT INFO
# Provides: apparmor
# Required-Start: mountall
# Required-Stop: umountfs
# Default-Start: S
# Default-Stop:
# Short-Description: AppArmor initialization
# Description: AppArmor init script. This script loads all AppArmor profiles.
### END INIT INFO

#. /etc/apparmor/functions
. /lib/lsb/init-functions

usage() {
    echo "Usage: $0 {start|stop|restart|reload|force-reload|status|recache}"
}

test -x ${PARSER} || exit 0 # by debian policy
# LSM is built-in, so it is either there or not enabled for this boot
#test -d /sys/module/apparmor || exit 0

#securityfs() {
#	# Need securityfs for any mode
#	if [ ! -d "${AA_SFS}" ]; then
#		if cut -d" " -f2,3 /proc/mounts | grep -q "^${SECURITYFS} securityfs"'$' ; then
#			log_action_msg "AppArmor not available as kernel LSM."
#			log_end_msg 1
#			exit 1
#		else
#			log_action_begin_msg "Mounting securityfs on ${SECURITYFS}"
#			if ! mount -t securityfs none "${SECURITYFS}"; then
#				log_action_end_msg 1
#				log_end_msg 1
#				exit 1
#			fi
#		fi
#	fi
#	if [ ! -w "$AA_SFS"/.load ]; then
#		log_action_msg "Insufficient privileges to change profiles."
#		log_end_msg 1
#		exit 1
#	fi
#}

# Allow "recache" even when running on the liveCD
#if [ "$1" = "recache" ]; then
#	recache_profiles
#	exit $?
#fi

# do not perform start/stop/reload actions when running from liveCD
#test -d /rofs/etc/apparmor.d && exit 0

case "$1" in
	start)
		log_daemon_msg "Starting tesis"
		log_daemon_msg "Starting Web"
		/etc/init.d/tesis
		log_daemon_msg "Starting Barnyard2"
		/etc/init.d/barnyard2
		rc=$?
		log_end_msg "$rc"
		;;
	stop)
		log_daemon_msg "Unloading tesis"
		log_daemon_msg "Unloading Web"
		ps ax|grep tesis_server.pl | grep perl|awk '{print $1}'|xargs kill -9
		log_daemon_msg "Unloading Barnyard2"
		ps ax|grep barnyard2 | grep snortunifed2.log|awk '{print $1}'|xargs kill -9
		rc=0
		log_end_msg $rc
		;;
	status)
		ps ax|grep tesis_server.pl | grep perl
		ps ax|grep barnyard2 | grep snortunifed2.log
		rc=$?
		;;
	*)
		usage
		exit 1
		;;
	esac
exit $rc
